智能多功能控制系统项目说明
项目概述
本项目基于 STM32F407IGH6 微控制器，集成舵机运动控制、语音控制、WiFi 控制、火焰检测和温湿度监测等功能模块。通过串口通信接收外部指令，结合 PWM 控制和 I2C 通信，实现机器人行走、环境监测及安全报警。项目旨在打造一个模块化、可扩展的嵌入式控制平台，适用于智能机器人或物联网应用场景。
功能模块详述
1. 运动模块 - SG90 舵机控制
功能描述
该模块利用 SG90 舵机驱动机器人的四足运动，支持坐下、站立、前进和后退。每条腿（前左、前右、后左、后右）对应一个舵机，通过 PWM 信号精确控制角度（0°至180°）。
实现原理

硬件基础：采用 STM32F407 的 TIM3 定时器，生成 PWM 信号，分别控制 GPIOC6、GPIOC7、GPIOC8 和 GPIOC9 引脚。
时钟配置：

APB1 时钟频率为 84MHz。
预分频值设为 839（TIM_Prescaler = 839），将时钟频率降至 100kHz。
自动重装载值设为 1999（TIM_Period = 1999），PWM 周期为 2000 / 100kHz = 20ms，符合舵机控制标准周期。


PWM 脉宽计算：

脉宽范围：0.5ms（0°）至 2.5ms（180°），通过公式 ccr = 50 + (angle * 200) / 180 转换角度。
具体映射：

0°：0.5ms（ccr = 50）
45°：1.0ms（ccr = 100）
90°：1.5ms（ccr = 150）
135°：2.0ms（ccr = 200）
180°：2.5ms（ccr = 250）




动作实现：

坐下：所有舵机角度设为 0°。
站立：所有舵机角度设为 90°。
前进：采用 trot 步态，对角腿同步移动（阶段 1：腿 1 和 4 抬至 90°，腿 2 和 3 降至 0°；阶段 2：反之），每阶段延时 500ms。
后退：反向 trot 步态，运动顺序与前进相反。



代码实现

TIM3_PWM_Init：初始化 TIM3 和 GPIOC 引脚，配置 PWM 模式。
Servo_SetAngle：根据输入角度计算 PWM 脉宽，更新对应通道的比较值。
动作函数 Sit、Stand、RunForward、RunBackward：协调控制四舵机运动。


2. 语音控制模块 - 天问 Block
功能描述
通过天问 Block 语音模块实现语音指令识别，接收用户语音后发送至 STM32，执行对应动作。
实现原理

硬件连接：

语音模块串口 0 连接 STM32 USART2（PA2 TX，PA3 RX）。
调试输出通过 USART6（PG9 TX，PG14 RX）连接至 PC。


通信流程：

在天问软件中下载并烧录语音模型。
语音模块将指令通过 USART2 传输至 STM32。
STM32 通过 USART2_IRQHandler 中断接收数据，存入 Data 数组，以 \r 或 \n 结束，设置 flag 触发处理。


指令处理：

匹配 Data 内容（如 "sit_down"、"run_go"），调用对应函数（如 Sit、RunForward）。
USART6 回显数据，便于调试。



代码实现

Init_usart2：初始化 USART2 和 USART6，启用中断。
fputc：重定向 printf 输出至 USART6。
USART2_IRQHandler：处理接收数据，识别换行符触发。


3. WiFi 控制模块
功能描述
通过 WiFi 模块（ESP-12F）以 TCP Server 模式发送指令，远程控制 STM32 执行动作。
实现原理

硬件连接：WiFi 模块串口连接 STM32 USART3（PB10 TX，PB11 RX）。
通信流程：

WiFi 模块接收 TCP 指令（如 "sit_down"），通过 USART3 传输至 STM32。
STM32 通过 USART3_IRQHandler 中断接收数据，存入 Data 数组，以 : 开头、\r 或 \n 结束，设置 flag 触发处理。
匹配指令，调用对应函数。


调试支持：USART6 回显接收数据。

代码实现

Init_usart2：初始化 USART3。
USART3_IRQHandler：处理 USART3 数据，识别有效指令。


4. 火焰检测模块 - PD333
功能描述
使用 PD333 光电二极管检测火焰，触发蜂鸣器报警并显示状态。
实现原理

硬件连接：

PD333 阴极接 5V，阳极通过 10kΩ 电阻接地，阳极输出接 PA1（ADC1 Channel 1）。


检测过程：

PD333 响应红外光，火焰产生光电流，通过电阻转换为电压。
ADC1 读取 PA1 电压，代码判断是否超过 1.5V 阈值。
检测到火焰时：蜂鸣器（PA15）响 500ms，OLED 显示 "Flame Detected!"，串口输出状态。


响应方式：通过串口命令 "flame_check" 触发，或可扩展为定时检测。

代码实现

Flame_Init：初始化 ADC1，配置 PA1。
Flame_Check：读取电压，判断阈值，控制输出。


5. 温湿度监测模块 - SHT20
功能描述
使用 SHT20 传感器测量环境温度和湿度，并在 OLED 上显示结果。
实现原理

硬件连接：

SHT20 通过 I2C 接口（PB6 SCL，PB7 SDA）连接，3.3V 供电，4.7kΩ 上拉电阻。


测量过程：

发送命令 0xE3（温度）或 0xE5（湿度），等待 85ms（温度）或 29ms（湿度）测量完成。
I2C 读取 16 位数据，转换为实际值：

温度：-46.85 + 175.72 * (raw / 65536)。
湿度：-6 + 125 * (raw / 65536)。


OLED 显示格式："Temp: XX.XX C" 和 "Hum: XX.XX %"。


输出：串口打印温度和湿度值。

代码实现

Init_sht20：初始化 I2C 接口。
sht20_temdata 和 sht20_humdata：读取原始温度和湿度数据。
sht20_getdata：处理数据，更新 OLED 显示。


6. 主程序模块
功能描述
主程序集成所有模块，响应串口指令，执行对应功能。
实现原理

初始化：配置系统时钟（168MHz）、NVIC、LED、蜂鸣器、按键、电机、串口、SHT20、TIM3、火焰检测和 OLED。
主循环：

检测 flag，处理 Data 数组中的指令。
支持命令：fan_change、motor_change、beep_change、led_change、sit_down、stand_up、run_go、back_up、weather、flame_check。


显示：初始化 OLED 显示项目名称和日期。

代码实现

main：执行系统初始化和主循环逻辑。


项目特点

模块化设计：各功能独立封装，便于维护和扩展。
多接口支持：包括 USART2（语音）、USART3（WiFi）、USART6（调试）、I2C（SHT20）、ADC（火焰）。
实时性：PWM 驱动舵机，定时器确保动作同步。
用户交互：支持串口指令输入和 OLED 实时显示。

未来改进方向

引入 FreeRTOS 提升多任务处理能力。
优化 WiFi 模块，增加状态反馈功能。
扩展火焰检测为连续实时监控。

附录

开发环境：Keil uVision，STM32F407IGH6 开发板。
完成日期：2025年8月31日。